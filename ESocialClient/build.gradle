/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin : 'java'
apply plugin : 'java-library'
apply plugin : 'maven'
apply plugin : 'maven-publish'
apply plugin : 'eclipse-wtp'

version = "1.0"
def versionAcao = "07/01/2018"
def appName     = "EsocialCliente - teste de envio de lote de eventos"

tasks.withType(JavaCompile) {
    options.fork = true
}

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.7 
targetCompatibility = 1.7

eclipse.wtp.facet {
    facets = []
    facet name:'jst.ejb', version:'3.1'
    facet name: 'jst.java', version: '1.7'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    mavenLocal()    
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile 'javax:javaee-api:7.0'
    compile files('lib/UBIMensagens-ejb.jar')
    
    compile 'log4j:log4j:1.2.13'    
    compile 'org.hibernate:hibernate-core:4.3.1.Final'    
    compile 'javax.inject:javax.inject:1'
    compile 'javax.validation:validation-api:1.0.0.GA'
    compile 'org.apache.axis:axis:1.4'
    
    /* Marcelo - 28/08/2017 17:28 - Descomentada as dependências para poder gerar a classe SOAPSSLConfig. */ 
    compile  'org.apache.cxf:cxf-rt-frontend-simple:3.1.12'
    compile 'org.apache.cxf:cxf-rt-frontend-jaxws:3.1.12'    
    compile 'org.apache.cxf:cxf-rt-ws-policy:3.1.12'
    compile 'org.apache.cxf:cxf-rt-ws-security:3.1.12'
    compile group: 'org.apache.cxf', name: 'cxf-rt-ws-addr', version: '3.1.12'    
    compile 'org.apache.cxf:cxf-rt-ws-policy:3.1.12'
    compile group: 'org.apache.cxf', name: 'cxf-core', version: '3.1.12'
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.1.12'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.1.12' 
    compile group: 'org.apache.cxf', name: 'cxf-rt-bindings-soap', version: '3.1.12'
    
    
    /* Marcelo Leite - 28/08/2017 - Inserido para resolução de dependências na classe SOAPSSLConfig. */ 
    compile group: 'org.apache.cxf', name: 'cxf-api', version: '2.7.18'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http-jetty', version: '3.1.12'
    
    /* Marcelo Leite - 29/08/2017 - Inserido para que o Apache CXF consiga ler o arquivo "cxf.xml" na pasta "META-INF".
       isto é necessário de acordo com a documentação da configuração do CXF (http://cxf.apache.org/docs/configuration.html). */
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.10.RELEASE'
    compile group: 'org.apache.cxf', name: 'cxf-bundle-jaxrs', version: '2.7.18'
    compile 'org.apache.cxf:cxf-rt-ws-policy:2.7.0'
    compile 'org.apache.cxf:cxf-rt-ws-security:2.7.0'
    compile 'org.apache.cxf:cxf-rt-frontend-jaxws:2.7.0'
    
    compile 'org.apache.cxf:cxf-rt-ws-policy:3.1.12'
    compile 'org.apache.cxf:cxf-rt-ws-security:3.1.12'
    compile 'org.apache.cxf:cxf-rt-frontend-jaxws:2.7.0'
    compile 'org.apache.cxf:cxf-rt-transports-http:2.7.0'
}

jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

    manifest {
        attributes 'Implementation-Title': appName,
        	           'Implementation-Version': versionAcao,
                   'Main-Class': 'br.com.acaosistemas.main.EsocialClient',
        	           'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
    }
    // How-to add class path:
    //     https://stackoverflow.com/questions/22659463/add-classpath-in-manifest-using-gradle
    //     https://gist.github.com/simon04/6865179
}